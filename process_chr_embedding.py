# -*- coding: utf-8 -*-

#Author: Jay Yip
#Date 05Mar2017

"""Download and process the Chinese character embedding table"""

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import urllib.request
import os
import pickle

import tensorflow as tf
import configuration


def download_embedding():
    """
    Download files from web

    Returns:
        A tuple (word, embedding). Emebddings shape is (100004, 64).
    """
    if not tf.gfile.Exists('polyglot-zh_char.pkl'):

        urllib.request.urlretrieve('http://sighan.cs.uchicago.edu/bakeoff2005/data/icwb2-data.zip', 
            'polyglot-zh_char.pkl')

    return pickle.load(open('polyglot-zh_char.pkl', 'rb'))

def process_embedding(vocab):
    """
    This function will process the embedding. The embedding table will be organized with 
    the same order as the word_count. Any unknown features will be abandomed.

    Args:
        vocab: Vocabulary obj generated by build input

    Returns:
        embedding_table: A numpy 2d array. Will be feed to embedding_placeholder when graph execution 
    """



def main():

    #Load configuration
    model_config = configuration.ModelConfig()

    #Load vocabulary object
    vocab_dir = os.path.join('data', 'vocab.pkl')
    vocab = pickle.load(open(vocab_dir, 'rb'))

    download_embedding()

    process_embedding(vocab)


if __name__ == '__main__':
    tf.app.run()

